{"version":3,"sources":["utils/consts.js","components/Login.js","routes.js","components/Chat.js","components/AppRouter.js","components/Navbar.js","components/Loader.js","App.js","index.js"],"names":["LOGIN_ROUTE","CHAT_ROUTE","Login","useContext","Context","auth","login","a","provider","GoogleAuthProvider","getAuth","signInWithPopup","user","console","log","Container","Grid","container","style","height","window","innerHeight","alignItems","justifyContent","width","background","direction","Box","p","Button","onClick","variant","publicRoutes","path","Component","privateRoutes","AppRouter","useAuthState","map","component","exact","to","Navbar","AppBar","color","position","Toolbar","signOut","Loader","class","App","loading","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createContext","firestore","getFirestore","ReactDOM","render","Provider","value","document","getElementById"],"mappings":"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","file":"static/js/main.25201010.chunk.js","sourcesContent":["export const LOGIN_ROUTE = '/login';\nexport const CHAT_ROUTE = '/chat';\n","import React, {useContext} from 'react';\nimport { Button, Container, Grid } from '@material-ui/core';\nimport { Box } from '@material-ui/core';\nimport {Context} from '../index';\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\n\n\n\n\nconst Login = () => {\n  const {auth} = useContext(Context);\n\n  const login = async () => {\n    const provider = new GoogleAuthProvider();\n    const auth = getAuth();\n    const {user} = await signInWithPopup(auth, provider);\n    console.log(user);\n  };\n\n  return (\n    <Container>\n      <Grid container\n            style={{height: window.innerHeight - 50}}\n            alignItems={\"center\"}\n            justifyContent={\"center\"}\n            >\n              <Grid style={{width:400, background: 'lightgray'}}\n                container\n                  alignItems={\"center\"}\n                  direction={\"column\"}\n              >\n                <Box p={5}>\n                  <Button onClick={login} variant={\"outlined\"}>Войти с помощью Google</Button>\n                </Box>\n              </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default Login;\n","import { LOGIN_ROUTE } from \"./utils/consts\";\nimport { CHAT_ROUTE } from \"./utils/consts\";\nimport Login from \"./components/Login\";\nimport Chat from \"./components/Chat\";\n\nexport const publicRoutes = [\n  {\n    path: LOGIN_ROUTE,\n    Component : Login\n  }\n]\n\nexport const privateRoutes = [\n  {\n    path: CHAT_ROUTE,\n    Component : Chat\n  }\n]\n\n\n","import React from 'react';\n\nconst Chat = () => {\n  return (\n    <div>\n      Chat\n    </div>\n  );\n};\n\nexport default Chat;\n","import React, { useContext } from 'react';\nimport {Route, Switch, Redirect} from 'react-router-dom';\nimport { CHAT_ROUTE, LOGIN_ROUTE } from '../utils/consts';\nimport { privateRoutes, publicRoutes } from '../routes';\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {Context} from \"../index\";\n\n\nconst AppRouter = () => {\n  const {auth} = useContext(Context);\n  const [user] = useAuthState(auth);\n\n  return user ?\n  (\n    <Switch>\n      {privateRoutes.map(({path, Component}) =>\n        <Route key={path} path={path} component={Component} exact={true}/>\n      )}\n      <Redirect to={CHAT_ROUTE}/>\n    </Switch>\n  )\n  :\n  (\n\n    <Switch>\n      {publicRoutes.map(({path, Component}) =>\n        <Route key={path} path={path} component={Component} exact={true}/>\n      )}\n      <Redirect to={LOGIN_ROUTE}/>\n    </Switch>\n  )\n};\n\nexport default AppRouter;\n","import React, {useContext} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { Button, Grid } from '@material-ui/core';\nimport { NavLink } from 'react-router-dom';\nimport { LOGIN_ROUTE } from '../utils/consts';\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {Context} from \"../index\";\n\n\nconst Navbar = () => {\n  const {auth} = useContext(Context);\n  const [user] = useAuthState(auth);\n\n\n  return (\n    <AppBar color={\"secondary\"} position=\"static\">\n    <Toolbar variant={\"dense\"}>\n      <Grid container justifyContent={\"flex-end\"}>\n        {user ?\n          <Button onClick={() => auth.signOut()} variant={\"outlined\"}>Выйти</Button>\n          :\n          <NavLink to={LOGIN_ROUTE}>\n            <Button variant={\"outlined\"}>Логин</Button>\n          </NavLink>\n        }\n      </Grid>\n    </Toolbar>\n  </AppBar>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport { Container, Grid } from '@material-ui/core';\nimport '../App.css';\n\nconst Loader = () => {\n  return (\n    <Container>\n    <Grid container\n          style={{height: window.innerHeight - 50}}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n          >\n            <Grid\n              container\n                alignItems={\"center\"}\n                direction={\"column\"}\n            >\n              <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n            </Grid>\n    </Grid>\n  </Container>\n  );\n};\n\nexport default Loader;\n","import React, { useContext } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport Navbar from './components/Navbar';\nimport './App.css';\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {Context} from \"./index\";\nimport Loader from \"./components/Loader\";\n\nconst App = () => {\n  const {auth} = useContext(Context);\n  const [user, loading, error] = useAuthState(auth);\n\n  if (loading) {\n    return <Loader/>\n  }\n\n\n  return (\n    <BrowserRouter>\n      <Navbar/>\n      <AppRouter/>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React, { createContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from 'firebase/auth';\nimport { getFirestore } from 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCPnQohEOYbyNKaa9Nh9ajb_9n_VZaO_lw\",\n  authDomain: \"react-chat-4cd64.firebaseapp.com\",\n  projectId: \"react-chat-4cd64\",\n  storageBucket: \"react-chat-4cd64.appspot.com\",\n  messagingSenderId: \"150386714249\",\n  appId: \"1:150386714249:web:67102e0e252f99f7abc858\",\n  measurementId: \"G-HVBKMY5MGK\"\n};\n\nexport const app = initializeApp(firebaseConfig);\n\nexport const Context = createContext(null);\nexport const auth = getAuth();\nconst firestore = getFirestore();\n\nReactDOM.render(\n  <Context.Provider value={\n    {\n      app,\n      auth,\n      firestore\n    }\n  }>\n    <App/>\n  </Context.Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}